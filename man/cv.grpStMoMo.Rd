% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glcvStMoMo.R
\name{cv.grpStMoMo}
\alias{cv.grpStMoMo}
\title{Cross validation for Stochastic Mortality Model fitted 
with Group Regularised Penalties}
\usage{
cv.grpStMoMo(object, h = 1, lambda = NULL, nlambda = 50,
  data = NULL, Dxt = NULL, Ext = NULL, ages.train = NULL,
  years.train = NULL, ages = NULL, years = NULL, index = NULL,
  returnY = FALSE, type = c("logrates", "rates"), verbose = TRUE)
}
\arguments{
\item{object}{an object of class \code{"StMoMo"} defining the 
stochastic mortality model.}

\item{h}{number of years for forecasting horizon.}

\item{lambda}{optional vector of lambda values for group lasso 
fitting. If not specified, a sequence of values of length nlambda 
is computed automatically, equally spaced on the log scale.}

\item{nlambda}{the number of lambda values (if \code{lambda}) is
left unspecificed. Default is 50.}

\item{data}{an optional object of type StMoMoData containing 
information on deaths and exposures to be used for training the model. 
This is typically created with function \code{\link{StMoMoData}}. 
If this is not provided then the training data is taken from 
arguments, \code{Dxt}, \code{Ext}, \code{ages}, \code{years}.}

\item{Dxt}{optional matrix of deaths data.}

\item{Ext}{optional matrix of observed exposures of the same 
dimension of \code{Dxt}.}

\item{ages.train}{optional vector of ages to include in the 
training. Must be a subset of \code{ages}.}

\item{years.train}{optional vector of years to include in the 
training. Must be a subset of \code{years}.}

\item{ages}{optional vector of ages corresponding to rows of 
\code{Dxt} and \code{Ext}.}

\item{years}{optional vector of years corresponding to rows of 
\code{Dxt} and \code{Ext}.}

\item{index}{optional vector describing the grouping of the coefficients. If
there are coefficients to be included in the model without being penalised, assign
them to group 0 (or "0"). If this is not provided, the grouping is automatically
determined and all groups are penalised.}

\item{returnY}{a logical value. If \code{TRUE}, \code{cv.grpStMoMo}
returns a list of length \code{nlambda}, containing matrices of the fitted mortality rates 
for the cross validation folds for each value of \code{lambda}.}

\item{type}{the type of the predicted values that the cross 
validation is performed with respect to. The alternatives are 
\code{"rates"} and \code{"logrates"}. If \code{"rates"}, \code{cvStMoMo}
returns the mean squared error using the deviation between
realised and predicted mortality rates. If \code{"logrates"}, 
\code{cvStMoMo} returns the mean squared error using the 
deviation between realised and predicted log mortality rates. \code{lambda.min}, 
\code{min} and \code{se} also depend on \code{type}.}

\item{verbose}{a logical value. If \code{TRUE} progress 
indicators are printed as the model is fitted. Set 
\code{verbose = FALSE} to silent the fitting and avoid 
progress messages.}
}
\value{
A list with class \code{"cv.grpStMoMo"} with components:
  
  \item{model}{ the object of class \code{"StMoMo"} defining 
  the fitted stochastic mortality model.}
  
  \item{data}{ StMoMoData object provided for training the model.}
  
  \item{Dxt}{ matrix of deaths used in the training.}
  
  \item{Ext}{ matrix of exposures used in the training.}
  
  \item{qxt}{ matrix of mortality rates (\eqn{D_{x,t}/E_{x,t}}) 
  used in the training.} 
   
  \item{Lqxt}{ matrix of log mortality rates (\eqn{log(q_{x,t})}) 
  used in the training.} 
  
  \item{lambda}{ vector of lambda values used in the fitting.}
  
  \item{cv.rates}{ if \code{returnY=TRUE}, matrix of predicted 
  mortality rates.} 
  
  \item{cv.mse}{ if \code{type="rates"}, vector mean squared errors using predicted 
  mortality rates and realised mortality rates. If \code{type="logrates"}, vector of 
  mean squared errors using predicted log mortality rates and realised log mortality 
  rates.}  
  
  \item{se}{ the estimated standard error for \code{cv.mse}.}
  
  \item{min}{ the index of lambda corresponding to \code{lambda.min}.}
  
  \item{lambda.min}{ the value of lambda with the minimum cross-validation error
  (\code{cv.mse}).}
  
  \item{lambda.1.se}{ the value of lambda such that error is within 1 
  standard error of the minimum.}
  
  \item{min.1se}{ the index of lambda corresponding to \code{lambda.1se}.}
}
\description{
Perform cross validation by period for a Stochastic Mortality Model
being fitted using the group regularised penalties.
}
\examples{

# One-year forecasting horizon based on log-rates using 25 lambda values
APCcvgrp <- cv.grpStMoMo(apc(link = "log-Gaussian"), h = 1, data = EWMaleData, ages.train = 55:89, 
                     type = "logrates", nlambda = 25)

# Ten-year forecasting using arguments Dxt, Ext, ages, years to pass fitting data, using pre-defined lambda grid
lambda <- c(0.5, 0.4, 0.3, 0.2, 0.1)
APCcvgrp <- cv.grpStMoMo(apc(link = "log-Gaussian"), h = 10, Dxt = EWMaleData$Dxt, 
                     Ext = EWMaleData$Ext, ages = EWMaleData$ages, years = EWMaleData$years, 
                     ages.train = 55:89, type = "logrates", lambda = lambda)
            
}
