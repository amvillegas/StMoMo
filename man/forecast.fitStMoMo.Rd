% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/forecastfitStMoMo.R
\name{forecast.fitStMoMo}
\alias{forecast.fitStMoMo}
\title{Forecast mortality rates using a Stochastic Mortality Model}
\usage{
\method{forecast}{fitStMoMo}(object, h = 50, level = 95, oxt = NULL,
  gc.order = c(1, 1, 0), gc.include.constant = TRUE, jumpchoice = c("fit",
  "actual"), ...)
}
\arguments{
\item{object}{an object of class \code{"fitStMoMo"} with the fitted
parameters of a stochastic mortality model.}

\item{h}{number of years ahead to forecast.}

\item{level}{confidence level for prediction intervals of the
period and cohort indices.}

\item{oxt}{optional matrix/vector or scalar of known offset to be
added in the forecasting. This can be used to specify any a priori
known component to be added to the forecasted predictor.}

\item{gc.order}{a specification of the ARIMA model: the three components
\eqn{(p, d, q)} are the AR order, the degree of differencing, and the MA order.
The default is an ARIMA\eqn{(1, 1, 0)}.}

\item{gc.include.constant}{a logical value indicating if the ARIMA model
should include a constant value. The default is \code{TRUE}.}

\item{jumpchoice}{option to select the jump-off rates, i.e. the rates
from the final year of observation, to use in projections of mortality rates.
\code{"fit"}(default) uses the fitted rates and \code{"actual"} uses the
actual rates from the final year.}

\item{...}{other arguments.}
}
\value{
A list of class \code{"forStMoMo"} with components:

\item{rates}{ a matrix with the point forecast of the rates.}
\item{ages}{ vector of ages corresponding to the rows of \code{rates}.}
\item{years}{vector of years for which a forecast has been produced. This
 corresponds to the columns of \code{rates}.}

\item{kt.f}{ forecasts of period indexes of the model. This is a list with the
 \code{model} fitted to \eqn{\kappa_t}; the \code{mean}(central) forecast,
 the \code{lower} and \code{upper} limits of the prediction interval;
 the confidence \code{level} associated with the prediction interval; and the
 \code{years} for which a forecast was produced. If the model does
  not have any age-period terms (i.e. \eqn{N=0}) this is set to \code{NULL}.}

\item{gc.f}{ forecasts of cohort index of the model. This is a list with the
 \code{model} fitted to \eqn{\gamma_c}; the \code{mean}(point) forecast,
 the \code{lower} and \code{upper} limits of the prediction interval;
 the confidence \code{level} associated with the prediction interval; and the
 \code{cohorts} for which a forecast was produced. If the mortality model does
 not have a cohort effect this is set to \code{NULL}.}

\item{oxt.f}{ the offset used in the forecast.}

\item{fitted}{ a matrix with the fitted in-sample rates of the model for
the years for which the mortality model was fitted.}

\item{model}{the model fit from which the forecast was produced.}

\item{jumpchoice}{Jump-off method used in the forecast.}
}
\description{
Forecast mortality rates using a Stochastic Mortality Model fit.
The period indexes \eqn{\kappa_t^{(i)}, i = 1,..N,} are forecasted
using a Multivariate Random Walk with Drift. The cohort index
\eqn{\gamma_{t-x}} is forecasted using an ARIMA\eqn{(p, d, q)}. By default
an ARIMA\eqn{(1, 1, 0)} with a constant is used.
}
\details{
Fitting and forecasting of the Multivariate Random Walk with Drift
for the period indexes use the function \code{\link{mrwd}}.
Fitting and forecasting of the ARIMA model for the cohort index
is done with function \code{\link[forecast]{Arima}} from package
\pkg{forecast}. See the latter function for further details on
input arguments \code{gc.order} and \code{gc.include.constant}.

Note that in some cases forecast of the
cohort effects may be needed for a horizon longer than \code{h}.
This is the case when in the fitted model the most recent cohorts
have been zero weighted. The forecasted cohorts can be seen in
\code{gc.f$cohorts}.
}
\examples{
#Lee-Carter
LCfit <- fit(lc(), Dxt = EWMaleData$Dxt, Ext = EWMaleData$Ext,
             ages = EWMaleData$ages, years = EWMaleData$years,
             ages.fit = 55:89)
LCfor <- forecast(LCfit)
plot(LCfor)

#CBD
CBDfit <- fit(cbd(),Dxt = EWMaleData$Dxt, Ext = EWMaleData$Ext,
              ages = EWMaleData$ages, years = EWMaleData$years,
              ages.fit = 55:89)
CBDfor <- forecast(CBDfit)
plot(CBDfor, parametricbx = FALSE)

#APC: Compare forecast with different models for the cohort index
wxt <- genWeightMat(55:89,  EWMaleData$years, clip = 3)
APCfit <- fit(apc(), Dxt = EWMaleData$Dxt, Ext = EWMaleData$Ext,
              ages = EWMaleData$ages, years = EWMaleData$years,
              ages.fit = 55:89, wxt = wxt)
APCfor1 <- forecast(APCfit)
plot(APCfor1, parametricbx = FALSE, nCol = 3)
APCfor2 <- forecast(APCfit, gc.order = c(0,2,2))
plot(APCfor2, only.gc = TRUE)
plot(c(APCfit$years, APCfor1$years) , (cbind(APCfor1$fitted, APCfor1$rates))["65", ],
     type = "l", xlab = "year", ylab = "Mortality rate at age 65",
     main = "Forecasts with different models for gc")
lines(APCfor2$years, APCfor2$rates["65", ], col = "blue")
points(APCfit$years, (APCfit$Dxt / APCfit$Ext)["65", ], pch = 19)
}

